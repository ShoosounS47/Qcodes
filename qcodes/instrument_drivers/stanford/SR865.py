from qcodes import VisaInstrument, validators as vals


class Stanford_SR865(VisaInstrument):
    """
    This is the code for Stanford_SR865 Lock-in Amplifier
    Status: writing in progress
    """
    def __init__(self, name, address, reset=False, **kwargs):
        super().__init__(name, address, terminator='\n', **kwargs)

        self.add_parameter(name='frequency',
                           label='Frequency',
                           units='Hz',
                           get_cmd='FREQ?',
                           set_cmd='FREQ {}',
                           get_parser=float,
                           vals=vals.Numbers(1e-3, 2.5e6))
        self.add_parameter(name='amplitude',
                           label='Amplitude',
                           units='V',
                           get_cmd='SLVL?',
                           set_cmd='SLVL {}',
                           get_parser=float,
                           vals=vals.Numbers(10e-9, 2))
        self.add_parameter(name='phase',
                           label='Phase',
                           units='deg',
                           get_cmd='PHAS?',
                           set_cmd='PHAS {}',
                           get_parser=float,
                           vals=vals.Numbers(-3.6e5, 3.6e5))
        self.add_parameter(name='voltage_mode',
                           get_cmd='ISRC?',
                           set_cmd='ISRC {}',
                           val_mapping={'A-B': '1', 'A': '0'})
        self.add_parameter(name='voltage_coupling',
                           get_cmd='ICPL?',
                           set_cmd='ICPL {}',
                           val_mapping={'ac': '0', 'dc': '1'})
        self.add_parameter(name='voltage_range',
                           get_cmd='IRNG?',
                           set_cmd='IRNG {}',
                           val_mapping={'1': '0',
                                        '300e-3': '1',
                                        '100e-3': '2',
                                        '30e-3': '3',
                                        '10e-3': '4',
                                        })
        self.add_parameter(name='sensitivity',
                           get_cmd='SCAL?',
                           set_cmd='SCAL {}',
                           val_mapping={'1': '0',
                                        '500e-3': '1',
                                        '200e-3': '2',
                                        '100e-3': '3',
                                        '50e-3': '4',
                                        '20e-3': '5',
                                        '10e-3': '6',
                                        '5e-3': '7',
                                        '2e-3': '8',
                                        '1e-3': '9',
                                        '500e-6': '10',
                                        '200e-6': '11',
                                        '100e-6': '12',
                                        '50e-6': '13',
                                        '20e-6': '14',
                                        '10e-6': '15',
                                        '5e-6': '16',
                                        '2e-6': '17',
                                        '1e-6': '18',
                                        '500e-9': '19',
                                        '200e-9': '20',
                                        '100e-9': '21',
                                        '50e-9': '22',
                                        '20e-9': '23',
                                        '10e-9': '24',
                                        '5e-9': '25',
                                        '2e-9': '26',
                                        '1e-9': '27',
                                        })
        self.add_parameter(name='time_constant',
                           get_cmd='OFLT?',
                           set_cmd='OFLT {}',
                           val_mapping={'1e-6': '0',
                                        '3e-6': '1',
                                        '10e-6': '2',
                                        '30e-6': '3',
                                        '100e-6': '4',
                                        '300e-6': '5',
                                        '1e-3': '6',
                                        '3e-3': '7',
                                        '10e-3': '8',
                                        '30e-3': '9',
                                        '100e-6': '10',
                                        '300e-6': '11',
                                        '1': '12',
                                        '3': '13',
                                        '10': '14',
                                        '30': '15',
                                        '100': '16',
                                        '300': '17',
                                        '1e3': '18',
                                        '3e3': '19',
                                        '10e3': '20',
                                        '30e3': '21',
                                        })
        self.add_parameter(name='filter_slope',
                           get_cmd='OFSL?',
                           set_cmd='OFSL {}',
                           val_mapping={'6': '0',
                                        '12': '1',
                                        '18': '2',
                                        '24': '3',
                                        })
        self.add_parameter(name='sync_filter',
                           get_cmd='SYNC?',
                           set_cmd='SYNC {}',
                           val_mapping={'OFF': '0',
                                        'ON': '1',
                                        })
        self.add_parameter(name='adv_filter',
                           get_cmd='ADVFILT?',
                           set_cmd='ADVFILT {}',
                           val_mapping={'OFF': '0',
                                        'ON': '1',
                                        })
        self.add_parameter(name='noise_bndwdth',
                           get_cmd='ENBW?',
                           set_cmd='ENBW {}',
                           get_parser=float)
        self.connect_message()
